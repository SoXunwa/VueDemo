箭头函数

主要作用：定义匿名函数

注意事项：
    箭头函数没有自己的this，
    箭头函数的this不是调用方的this，
    而是在定义时，所在的对象就是它的this。

    扩展理解：如果箭头函数的外部有函数，外部函数的this，就是内部箭头函数的this。
            如果没有，则this 是window，
            不会是调用方。

    //传统函数：谁调用它，谁就是它this，this是调用方。

基本语法：
    1.没有参数：()=>{}
    2.一个参数：(name)=>{}
    3.多个参数：(name,age,sex)=>{}

    4.函数体只有一条语句/表达式，可以省略{}：
        //当只有一条语句/表达式时，
        ()=>console.log('我是箭头函数');

        //当只有一条语句/表达式时，并且不带括号，会自动返回处理结果。
        (x,y)=> x+y;

        //（多余）当只有一条语句/表达式时，带括号
        (x,y)=> {return x+y};

    5.函数体 存在多条语句，不可省略{}，并且不会自动返回处理结果，需要手动返回
        (x,y)=>{
            console.log(x,y);
            return x+y;
        }

将该方法的返回值作为某个方法的参数，不需要被其他人调用，省略的写法。
